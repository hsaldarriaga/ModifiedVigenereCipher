/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package modifiedvigenerecipher;

import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author hsaldarriaga
 */
public class MVCgui extends javax.swing.JFrame implements CallBack{

    /**
     * Creates new form MVCgui
     */
    public MVCgui() {
        initComponents();
        decoder = new Decoder(Progress, Lb_key, this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Lb_text = new javax.swing.JLabel();
        Text = new javax.swing.JTextField();
        Lb_key = new javax.swing.JLabel();
        key = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        Lb_status = new javax.swing.JLabel();
        Progress = new javax.swing.JProgressBar();
        Bt_cipher = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(8, 0));

        Lb_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lb_text.setText("Text (ASCII)");
        getContentPane().add(Lb_text);

        Text.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(Text);

        Lb_key.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lb_key.setText("Key (Hex)");
        getContentPane().add(Lb_key);

        key.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(key);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 418, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 26, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1);

        Lb_status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lb_status.setText("Status");
        getContentPane().add(Lb_status);
        getContentPane().add(Progress);

        Bt_cipher.setText("Cifrar");
        Bt_cipher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt_cipherActionPerformed(evt);
            }
        });
        Bt_cipher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Bt_cipherKeyReleased(evt);
            }
        });
        getContentPane().add(Bt_cipher);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Bt_cipherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt_cipherActionPerformed
        // TODO add your handling code here:
        if (state){
            String resu = ModifiedVigenereCipher.ValidateHex(key.getText());
            key.setText(resu);
            if (ModifiedVigenereCipher.IsValidASCII(resu)) {
                CipherText = ModifiedVigenereCipher.getCipherText(Text.getText(), resu);
                Bt_cipher.setText("Descifrar");
                Text.setEnabled(false);
                key.setEnabled(false);
                Lb_text.setText("Texto Cifrado(HEX)");
                Text.setText(javax.xml.bind.DatatypeConverter.printHexBinary(CipherText));
                key.setText("");
                state = false;
            } else {
                Lb_status.setText("Invalid Key");
            }
        } else {
            decoder.getTextAsyncronous(CipherText);
            Bt_cipher.setEnabled(false);
        }
    }//GEN-LAST:event_Bt_cipherActionPerformed

    private void Bt_cipherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Bt_cipherKeyReleased
        // TODO add your handling code here:
        if (!state) {
            if (evt.getKeyChar() == 'a' || evt.getKeyChar() == 'A') {
                try {
                    Lb_text.setText("Texto Cifrado(ASCII)");
                    Text.setText(new String(CipherText, "US-ASCII"));
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(MVCgui.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (evt.getKeyChar() == 'h' || evt.getKeyChar() == 'H') {
                Lb_text.setText("Texto Cifrado(HEX)");
                Text.setText(javax.xml.bind.DatatypeConverter.printHexBinary(CipherText));
            }
        }
    }//GEN-LAST:event_Bt_cipherKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MVCgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MVCgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MVCgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MVCgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MVCgui().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bt_cipher;
    private javax.swing.JLabel Lb_key;
    private javax.swing.JLabel Lb_status;
    private javax.swing.JLabel Lb_text;
    private javax.swing.JProgressBar Progress;
    private javax.swing.JTextField Text;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField key;
    // End of variables declaration//GEN-END:variables
    private byte[] CipherText;
    private boolean state = true;
    private Decoder decoder;

    @Override
    public void onFinish(Decoder.Answer answer) {
        if (CipherText!=null) {
                state = true;
                Text.setEnabled(true);
                key.setEnabled(true);
                Text.setText(answer.Text);
                key.setText(answer.key);
                Bt_cipher.setText("Cifrar");
                Lb_text.setText("Text(ASCII)");
            } else {
                Lb_status.setText("Error Descifrando.");
            }
        Bt_cipher.setEnabled(true);
    }
}
