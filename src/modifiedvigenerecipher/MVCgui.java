/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package modifiedvigenerecipher;

import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author hsaldarriaga
 */
public class MVCgui extends javax.swing.JFrame implements CallBack{

    /**
     * Creates new form MVCgui
     */
    public MVCgui() {
        initComponents();
        decoder = new Decoder(Progress, Lb_key, this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Lb_text = new javax.swing.JLabel();
        Lb_key = new javax.swing.JLabel();
        Lb_status = new javax.swing.JLabel();
        Progress = new javax.swing.JProgressBar();
        Bt_cipher = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Text = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        key = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(666, 426));
        setResizable(false);

        Lb_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lb_text.setText("Text (ASCII)");

        Lb_key.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lb_key.setText("Key (Hex)");

        Lb_status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lb_status.setText("Status");

        Bt_cipher.setText("Cifrar");
        Bt_cipher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt_cipherActionPerformed(evt);
            }
        });
        Bt_cipher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Bt_cipherKeyReleased(evt);
            }
        });

        Text.setColumns(20);
        Text.setLineWrap(true);
        Text.setRows(5);
        Text.setText("The first well documented description of a polyalphabetic cipher was formulated by Leon Battista Alberti around 1467 and used a metal cipher disc to switch between cipher alphabets. Alberti's system only switched alphabets after several words, and switches were indicated by writing the letter of the corresponding alphabet in the ciphertext. Later, in 1508, Johannes Trithemius, in his work Poligraphia, invented the tabula recta, a critical component of the Vigenère cipher. The Trithemius cipher, however, only provided a progressive, rigid and predictable system for switching between cipher alphabets.What is now known as the Vigenère cipher was originally described by Giovan Battista Bellaso in his 1553 book La cifra del. Sig. Giovan Battista Bellaso. He built upon the tabula recta of Trithemius, but added a repeating \"countersign\" (a key) to switch cipher alphabets every letter. Whereas Alberti and Trithemius used a fixed pattern of substitutions, Bellaso's scheme meant the pattern of substitutions could be easily changed simply by selecting a new key. Keys were typically single words or short phrases, known to both parties in advance, or transmitted \"out of band\" along with the message. Bellaso's method thus required strong security for only the key. As it is relatively easy to secure a short key phrase, say by a previous private conversation, Bellaso's system was considerably more secure.");
        jScrollPane1.setViewportView(Text);

        key.setColumns(20);
        key.setLineWrap(true);
        key.setRows(5);
        key.setText("7769676c657769676c65");
        jScrollPane2.setViewportView(key);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Lb_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Progress, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
            .addComponent(Bt_cipher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2)
            .addComponent(Lb_status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Lb_key, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(Lb_text, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Lb_key, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Lb_status, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Progress, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Bt_cipher, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Bt_cipherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt_cipherActionPerformed
        // TODO add your handling code here:
        if (state){
            String resu = ModifiedVigenereCipher.ValidateHex(key.getText());
            key.setText(resu);
            if (ModifiedVigenereCipher.IsValidASCII(resu)) {
                CipherText = ModifiedVigenereCipher.getCipherText(Text.getText(), resu);
                Bt_cipher.setText("Descifrar");
                Text.setEnabled(false);
                key.setEnabled(false);
                Lb_text.setText("Texto Cifrado(HEX)");
                Text.setText(javax.xml.bind.DatatypeConverter.printHexBinary(CipherText));
                key.setText("");
                state = false;
            } else {
                Lb_status.setText("Invalid Key");
            }
        } else {
            decoder.getTextAsyncronous(CipherText);
            Bt_cipher.setEnabled(false);
        }
    }//GEN-LAST:event_Bt_cipherActionPerformed

    private void Bt_cipherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Bt_cipherKeyReleased
        // TODO add your handling code here:
        if (!state) {
            if (evt.getKeyChar() == 'a' || evt.getKeyChar() == 'A') {
                try {
                    Lb_text.setText("Texto Cifrado(ASCII)");
                    Text.setText(new String(CipherText, "US-ASCII"));
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(MVCgui.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (evt.getKeyChar() == 'h' || evt.getKeyChar() == 'H') {
                Lb_text.setText("Texto Cifrado(HEX)");
                Text.setText(javax.xml.bind.DatatypeConverter.printHexBinary(CipherText));
            }
        }
    }//GEN-LAST:event_Bt_cipherKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MVCgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MVCgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MVCgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MVCgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(() -> {
            new MVCgui().setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bt_cipher;
    private javax.swing.JLabel Lb_key;
    private javax.swing.JLabel Lb_status;
    private javax.swing.JLabel Lb_text;
    private javax.swing.JProgressBar Progress;
    private javax.swing.JTextArea Text;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea key;
    // End of variables declaration//GEN-END:variables
    private byte[] CipherText;
    private boolean state = true;
    private final Decoder decoder;

    @Override
    public void onFinish(Decoder.Answer answer) {
        if (answer!=null) {
                state = true;
                Text.setEnabled(true);
                key.setEnabled(true);
                Text.setText(answer.Text);
                key.setText(answer.key);
                Bt_cipher.setText("Cifrar");
                Lb_text.setText("Text(ASCII)");
                Lb_key.setText("Key (Hex)");
            } else {
                Lb_status.setText("Error Descifrando.");
            }
        Bt_cipher.setEnabled(true);
    }
}
